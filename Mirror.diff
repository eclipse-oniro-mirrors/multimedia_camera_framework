From fa6e9bf2a98504ec8662c018600e71d72d068623 Mon Sep 17 00:00:00 2001
From: s00888898 <s00888898@notesmail.huawei.com/>
Date: Wed, 19 Mar 2025 21:26:10 +0800
Subject: [PATCH] =?UTF-8?q?TicketNo:DTS2025031713603=20Description:?=
 =?UTF-8?q?=E4=BF=AE=E6=94=B9=E5=8A=A8=E6=80=81=E7=85=A7=E7=89=87=E5=89=8D?=
 =?UTF-8?q?=E7=BD=AE=E6=97=8B=E8=BD=AC=E8=A7=92=E5=BA=A6=20Team:Gitee=20Fe?=
 =?UTF-8?q?ature=20or=20Bugfix:Bugfix=20Binary=20Source:Sync=20from=20Gite?=
 =?UTF-8?q?e=20PrivateCode(Yes/No):No?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I13e2e8e3bd92119be1ff0e288d85427a928fa89f
---
 .../camera_service/include/hstream_operator.h     |  2 ++
 services/camera_service/src/hstream_capture.cpp   |  4 +++-
 services/camera_service/src/hstream_operator.cpp  | 15 +++++++++++++--
 3 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/services/camera_service/include/hstream_operator.h b/services/camera_service/include/hstream_operator.h
index 4b7012639..9da436955 100644
--- a/services/camera_service/include/hstream_operator.h
+++ b/services/camera_service/include/hstream_operator.h
@@ -176,6 +176,7 @@ public:
     int32_t LinkInputAndOutputs(const std::shared_ptr<OHOS::Camera::CameraMetadata>& settings, int32_t opMode);
     const sptr<HStreamCommon> GetStreamByStreamID(int32_t streamId);
     const sptr<HStreamCommon> GetHdiStreamByStreamID(int32_t streamId);
+    void SetSensorRotation(int32_t rotationValue);
     void StartMovingPhotoEncode(int32_t rotation, uint64_t timestamp, int32_t format, int32_t captureId);
     void StartRecord(uint64_t timestamp, int32_t rotation, int32_t captureId);
     void GetOutputStatus(int32_t &status);
@@ -328,6 +329,7 @@ private:
     sptr<OHOS::HDI::Camera::V1_0::IStreamOperator> streamOperator_;
     bool isOfflineStreamOperator_ =  false;
     int32_t mlastCaptureId = 0;
+    int32_t sensorRotation_ = 0;
 };
 } // namespace CameraStandard
 } // namespace OHOS
diff --git a/services/camera_service/src/hstream_capture.cpp b/services/camera_service/src/hstream_capture.cpp
index 6aa05dcb7..c96cf7881 100644
--- a/services/camera_service/src/hstream_capture.cpp
+++ b/services/camera_service/src/hstream_capture.cpp
@@ -700,6 +700,9 @@ void HStreamCapture::SetRotation(const std::shared_ptr<OHOS::Camera::CameraMetad
             rotation = rotation - CAPTURE_ROTATE_360;
         }
     }
+    MEDIA_DEBUG_LOG("set current sensor rotationValue: %{public}d", rotation);
+    auto hStreamOperator = hStreamOperator_.promote();
+    hStreamOperator->SetSensorRotation(rotation);
     {
         uint8_t connectType = 0;
         std::lock_guard<std::mutex> lock(cameraAbilityLock_);
@@ -716,7 +719,6 @@ void HStreamCapture::SetRotation(const std::shared_ptr<OHOS::Camera::CameraMetad
         }
         MEDIA_INFO_LOG("set rotation camera real rotation %{public}d", rotation);
     }
-
     bool status = false;
     if (result == CAM_META_ITEM_NOT_FOUND) {
         status = captureMetadataSetting_->addEntry(OHOS_JPEG_ORIENTATION, &rotation, 1);
diff --git a/services/camera_service/src/hstream_operator.cpp b/services/camera_service/src/hstream_operator.cpp
index c732ff518..e5d6a1576 100644
--- a/services/camera_service/src/hstream_operator.cpp
+++ b/services/camera_service/src/hstream_operator.cpp
@@ -1269,14 +1269,25 @@ int32_t HStreamOperator::CalcRotationDegree(GravityData data)
 }
 #endif
 
+void HStreamOperator::SetSensorRotation(int32_t rotationValue)
+{
+    MEDIA_INFO_LOG("HStreamOperator::SetSensorRotation rotation is %{public}d", rotationValue);
+    // 获取当前传感器角度，isMovingPhotoMirror_为true表示前置，isMovingPhotoMirror_为false表示后置
+    if (!isMovingPhotoMirror_) {
+        sensorRotation_ = rotationValue - STREAM_ROTATE_90;
+    } else {
+        sensorRotation_ = STREAM_ROTATE_270 - rotationValue;
+    }
+}
+
 void HStreamOperator::StartMovingPhotoEncode(int32_t rotation, uint64_t timestamp, int32_t format, int32_t captureId)
 {
     if (!isSetMotionPhoto_) {
         return;
     }
     int32_t addMirrorRotation = 0;
-    MEDIA_INFO_LOG("sensorRotation is %{public}d", sensorRotation);
-    if ((sensorRotation == STREAM_ROTATE_0 || sensorRotation == STREAM_ROTATE_180) && isMovingPhotoMirror_) {
+    MEDIA_INFO_LOG("sensorRotation is : %{public}d", sensorRotation_);
+    if ((sensorRotation_ == STREAM_ROTATE_0 || sensorRotation_ == STREAM_ROTATE_180) && isMovingPhotoMirror_) {
         addMirrorRotation = STREAM_ROTATE_180;
     }
     int32_t realRotation = rotation + addMirrorRotation;
-- 
2.45.2.huawei.7