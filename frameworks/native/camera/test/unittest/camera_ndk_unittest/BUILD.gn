# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("./../../../../../../multimedia_camera_framework.gni")

module_output_path = "camera_framework/camera_framework/camera_ndk_test"

ohos_unittest("camera_ndk_test") {
  module_out_path = module_output_path
  include_dirs = [
    "./camera_ndk_capture_session_test/include",
    "./camera_ndk_common/include",
    "./camera_ndk_input_test/include",
    "./camera_ndk_manager_test/include",
    "./camera_ndk_output_test/include",
    "./camera_ndk_photo_native_test/include",
    "${multimedia_camera_framework_path}/frameworks/native/camera/test/unittest/camera_ndk_unittest/camera_ndk_common",
    "${multimedia_camera_framework_path}/interfaces/kits/native/include",
    "${multimedia_camera_framework_path}/interfaces/inner_api/native/test",
    "${multimedia_camera_framework_path}/services/deferred_processing_service/include/base/task_manager",
    "${multimedia_camera_framework_path}/services/deferred_processing_service/include/base/task_manager/task_group",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl",
    "${multimedia_camera_framework_path}/interfaces",
  ]

  sources = [
    "${multimedia_camera_framework_path}/frameworks/native/camera/test/unittest/camera_ndk_unittest/camera_ndk_common/camera_common.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/camera_input_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/camera_manager_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/camera_util.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/capture_session_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/metadata_output_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/photo_native_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/photo_output_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/preview_output_impl.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/video_output_impl.cpp",
    "${multimedia_camera_framework_path}/interfaces/inner_api/native/test/test_common.cpp",
    "camera_ndk_capture_session_test/src/camera_capture_session_unittest.cpp",
    "camera_ndk_input_test/src/camera_input_unittest.cpp",
    "camera_ndk_manager_test/src/camera_manager_unittest.cpp",
    "camera_ndk_output_test/src/camera_metadata_output_unittest.cpp",
    "camera_ndk_output_test/src/camera_photo_output_unittest.cpp",
    "camera_ndk_output_test/src/camera_preview_output_unittest.cpp",
    "camera_ndk_output_test/src/camera_video_output_unittest.cpp",
    "camera_ndk_photo_native_test/src/camera_photo_native_unittest.cpp",
    "${multimedia_camera_framework_path}/frameworks/native/ndk/impl/camera_input_impl.cpp",
  ]

  deps = [
    "${multimedia_camera_framework_path}/common:camera_utils",
    "${multimedia_camera_framework_path}/frameworks/native/camera/base:camera_framework",
    "${multimedia_camera_framework_path}/frameworks/native/ndk:ohcamera",
    "${multimedia_camera_framework_path}/services/camera_service:camera_service",
    "${multimedia_camera_framework_path}/test/test_common:test_common",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libprivacy_sdk",
    "access_token:libtoken_setproc",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "cJSON:cjson_static",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "drivers_interface_camera:libbuffer_handle_sequenceable_1.0",
    "drivers_interface_camera:libcamera_proxy_1.0",
    "drivers_interface_camera:libcamera_proxy_1.1",
    "drivers_interface_camera:libmap_data_sequenceable_1.0",
    "drivers_interface_camera:metadata",
    "googletest:gmock_main",
    "graphic_surface:surface",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "image_framework:ohimage",
    "ipc:ipc_core",
    "media_foundation:media_foundation",
    "media_foundation:native_media_core",
    "media_library:media_library",
    "media_library:media_library_asset_manager",
    "media_library:media_library_manager",
    "media_library:native_media_asset_manager",
    "napi:ace_napi",
    "resource_management:librawfile",
    "safwk:system_ability_fwk",
    "selinux_adapter:librestorecon",
    "sensor:sensor_interface_native",
    "window_manager:libdm",
  ]

  defines = [ "private=public" ]

  cflags = [
    "-fPIC",
    "-Werror=unused",
    "-fno-access-control",
  ]
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  cflags_cc = cflags
}
