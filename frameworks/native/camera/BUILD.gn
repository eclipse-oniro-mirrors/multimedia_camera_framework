# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_shared_library("camera_framework") {
  install_enable = true
  sources = [
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/src/hcamera_device_proxy.cpp",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/src/hcamera_service_proxy.cpp",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/src/hcapture_session_proxy.cpp",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/src/hstream_capture_proxy.cpp",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/src/hstream_repeat_proxy.cpp",
    "src/input/camera_info.cpp",
    "src/input/camera_input.cpp",
    "src/input/camera_manager.cpp",
    "src/output/capture_output.cpp",
    "src/output/photo_output.cpp",
    "src/output/preview_output.cpp",
    "src/output/video_output.cpp",
    "src/session/capture_session.cpp",
  ]

  cflags = [
    "-fPIC",
    "-Wall",
    "-DSUPPORT_CAMERA_AUTH",
  ]
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  include_dirs = [
    "//foundation/multimedia/camera_standard/services/camera_service/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/server/include",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata/include",
    "//foundation/multimedia/camera_standard/interfaces/inner_api/native/camera/include",
    "//foundation/graphic/standard/frameworks/surface/include",
    "//utils/system/safwk/native/include",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/osal/include",
    "//drivers/adapter/uhdf2/include/hdi",
  ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata:metadata",
    "//foundation/multimedia/camera_standard/services/camera_service:camera_service",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  include_dirs += [
    "//drivers/peripheral/camera/interfaces/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/server",
  ]

  if ("${product_name}" == "m40") {
    cflags += [ "-DPRODUCT_M40" ]
  } else {
    if (device_name == "rk3566" || device_name == "rk3568") {
      cflags += [ "-DRK_CAMERA" ]
    }
  }
  cflags_cc = cflags

  part_name = "multimedia_camera_standard"
  subsystem_name = "multimedia"
}
