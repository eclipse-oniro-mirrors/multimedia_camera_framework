/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package OHOS.CameraStandard;

enum RestoreParamTypeOhos {
    NO_NEED_RESTORE_PARAM_OHOS = 0,
    PERSISTENT_DEFAULT_PARAM_OHOS = 1,
    TRANSIENT_ACTIVE_PARAM_OHOS = 2,
};

struct EffectParam {
    int skinSmoothLevel;
    int faceSlender;
    int skinTone;
};

enum PolicyType{
    EDM = 0,
    PRIVACY = 1,
};

enum CaptureSessionState {
    SESSION_INIT = 0,
    SESSION_CONFIG_INPROGRESS = 1,
    SESSION_CONFIG_COMMITTED = 2,
    SESSION_RELEASED = 3,
    SESSION_STARTED = 4,
    SESSION_STATE_MAX = 5
};

enum MetadataObjectType {
    INVALID = -1,
    FACE = 0,
    HUMAN_BODY = 1,
    CAT_FACE = 2,
    CAT_BODY = 3,
    DOG_FACE = 4,
    DOG_BODY = 5,
    SALIENT_DETECTION = 6,
    BAR_CODE_DETECTION = 7,
    BASE_FACE_DETECTION = 8,
    BASE_TRACKING_REGION = 9,
};

enum SketchStatus {
    STOPED = 0,
    STARTED = 1,
    STOPPING = 2,
    STARTING = 3
};

struct SketchStatusData{
    SketchStatus status;
    float sketchRatio;
    float offsetx;
    float offsety;
};

struct CaptureEndedInfoExt {
    int streamId;
    int frameCount;
    boolean isDeferredVideoEnhancementAvailable;
    String videoId;
};

enum StreamType {
    CAPTURE = 1,
    REPEAT,
    METADATA,
    DEPTH,
};

enum TorchStatus {
    TORCH_STATUS_OFF = 0,
    TORCH_STATUS_ON,
    TORCH_STATUS_UNAVAILABLE
};

enum CallbackInvoker {
    CAMERA_HOST = 1,
    APPLICATION,
};

enum FoldStatus {
    UNKNOWN_FOLD = 0,
    EXPAND,
    FOLDED,
    HALF_FOLD
};

enum PressureStatus {
    SYSTEM_PRESSURE_NORMAL = 0,
    SYSTEM_PRESSURE_MILD,
    SYSTEM_PRESSURE_SEVERE,
    SYSTEM_PRESSURE_CRITICAL,
    SYSTEM_PRESSURE_SHUTDOWN
};

struct CameraAppInfo {
    int tokenId;
    String cameraId;
    int opmode;
    float zoomValue;
    int equivalentFocus;
    int width;
    int height;
    boolean videoStatus;
    int position;
    boolean focusStatus;
};

enum ControlCenterEffectType {
    BEAUTY = 0,
    PORTRAIT
};

struct ControlCenterStatusInfo {
    ControlCenterEffectType effectType;
    boolean isActive;
};