# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_shared_library("camera_service") {
  install_enable = true
  sources = [
    "binder/client/src/hcamera_device_callback_proxy.cpp",
    "binder/client/src/hcamera_service_callback_proxy.cpp",
    "binder/client/src/hstream_capture_callback_proxy.cpp",
    "binder/client/src/hstream_repeat_callback_proxy.cpp",
    "binder/server/src/hcamera_device_callback_stub.cpp",
    "binder/server/src/hcamera_device_stub.cpp",
    "binder/server/src/hcamera_service_callback_stub.cpp",
    "binder/server/src/hcamera_service_stub.cpp",
    "binder/server/src/hcapture_session_stub.cpp",
    "binder/server/src/hstream_capture_callback_stub.cpp",
    "binder/server/src/hstream_capture_stub.cpp",
    "binder/server/src/hstream_repeat_callback_stub.cpp",
    "binder/server/src/hstream_repeat_stub.cpp",
    "src/camera_util.cpp",
    "src/hcamera_device.cpp",
    "src/hcamera_host_manager.cpp",
    "src/hcamera_service.cpp",
    "src/hcapture_session.cpp",
    "src/hstream_capture.cpp",
    "src/hstream_repeat.cpp",
  ]
  cflags = [
    "-fPIC",
    "-Wall",
  ]
  cflags_cc = cflags
  include_dirs = [
    "//drivers/framework/include/utils/",
    "//drivers/adapter/uhdf2/osal/include/",
    "//drivers/adapter/uhdf2/include/hdi/",
    "//drivers/peripheral/camera/interfaces/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/utils/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/server/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/device/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/operator/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/host/include",
    "//foundation/multimedia/camera_standard/services/camera_service/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/server/include",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata/include",
  ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  if (device_name == "rk3566" || device_name == "rk3568") {
    cflags += [ "-DRK_CAMERA" ]
  }
  deps = [
    "//drivers/peripheral/camera/interfaces/hdi_ipc/client:libcamera_client",
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
  ]
  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]
  part_name = "multimedia_camera_standard"
  subsystem_name = "multimedia"
}
