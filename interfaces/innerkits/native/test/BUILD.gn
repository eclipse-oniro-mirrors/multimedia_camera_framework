# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("camera_config") {
  include_dirs = [
    "//foundation/multimedia/camera_standard/interfaces/innerkits/native/camera/include",
    "//foundation/multimedia/camera_standard/interfaces/innerkits/native/test",
    "//foundation/multimedia/camera_standard/services/camera_service/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/server/include",
    "//foundation/graphic/standard/frameworks/surface/include",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata/include",
    "//utils/system/safwk/native/include",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/osal/include",
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/display/interfaces/include",
  ]

  if (device_name == "baltimore") {
    include_dirs += [
      "//drivers/peripheral/adapter/camera/interfaces/include",
      "//drivers/peripheral/adapter/camera/interfaces/include/server",
      "//drivers/peripheral/adapter/camera/interfaces/include/callback/device",
      "//drivers/peripheral/adapter/camera/interfaces/include/callback/operator",
      "//drivers/peripheral/adapter/camera/interfaces/include/callback/host",
    ]
  } else {
    include_dirs += [
      "//drivers/peripheral/camera/interfaces/include",
      "//drivers/peripheral/camera/interfaces/hdi_ipc",
      "//drivers/peripheral/camera/interfaces/hdi_ipc/server",
      "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/device",
      "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/operator",
      "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/host",
    ]
  }
}

ohos_executable("camera_video") {
  install_enable = false
  sources = [
    "camera_video.cpp",
    "test_common.cpp",
  ]
  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/camera:camera_framework",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_media_standard:media_client",
  ]
  part_name = "multimedia_camera_standard"
  subsystem_name = "multimedia"
}

ohos_executable("camera_capture") {
  install_enable = false
  sources = [
    "camera_capture.cpp",
    "test_common.cpp",
  ]
  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/camera:camera_framework",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
  part_name = "multimedia_camera_standard"
  subsystem_name = "multimedia"
}

ohos_executable("camera_capture_video") {
  install_enable = false
  sources = [
    "camera_capture_video.cpp",
    "test_common.cpp",
  ]
  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/camera:camera_framework",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
  part_name = "multimedia_camera_standard"
  subsystem_name = "multimedia"
}
